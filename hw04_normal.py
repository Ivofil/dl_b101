# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(n=1, m=10):
    """
    Функция, возвращающая ряд Фибоначчи с n-элемента до m-элемента
    """
    fbn_list = [1, 1]
    for N in range(2,m+2):
        fbn_list.append(fbn_list[N-1] + fbn_list[N-2])
    print(fbn_list[n-1:m])
fibonacci(1, 3)
fibonacci(5, 20)
fibonacci()


# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

def sort_to_max(origin_list):
    """
    Функция, сортирующая принимаемый список по возрастанию
    """
    sorted_list = []
    for elm in range(len(origin_list)):
        sorted_list.append(min(origin_list))
        origin_list.remove(min(origin_list))
    print(sorted_list)
sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0])
sort_to_max([500, 34, 76, 1, 12, -70, 1, 4, 2, 10, -12, 2.5, 20, -11, 4, 4, 0])


# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

a = [1, -4, 6, 8, -10]
def my_filter(fn, sps):
    """
    Функция, аналог функции filter
    """
    result = []
    for x in sps:
        if fn(x):
            result.append(x)
    return result
print(a)
print(list(filter(lambda x: x > 0, a)))
print(list(my_filter(lambda x: x > 0, a)))


# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

def paralgram(A1, A2, A3, A4):
    """
    Функция,определяющая, будут ли координаты вершинами параллелограмма.
    """
    if A1[0] + A3[0] ==  A2[0] + A4[0] and A1[1] + A3[1] ==  A2[1] + A4[1]:
        print("параллелограмм")
    else:
        print("не параллелограмм")
paralgram((1, 1), (1, 50), (20, 50), (20, 1))
paralgram((1, 5), (5, 10), (20, 20), (20, 10))

















